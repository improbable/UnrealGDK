//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Unreal.CodeGeneration {
    using System.Collections.Generic;
    using System;
    using Improbable.CodeGeneration.Jobs;
    
    
    public partial class UnrealEntityPipelineImplementationGenerator : UnrealEntityPipelineImplementationGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 3 "Templates\UnrealEntityPipelineImplementationGenerator.tt"



            
            #line default
            #line hidden
            
            #line 6 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(@"// Copyright (c) Improbable Worlds Ltd, All Rights Reserved
// ===========
// DO NOT EDIT - this file is automatically regenerated.
// =========== 

#include ""EntityPipeline.h""
#include ""EntityPipelineBlock.h""
#include ""CoreMinimal.h""

#include ""SpatialOSViewTypes.h""
#include ""SpatialOSWorkerTypes.h""
#include ""CallbackDispatcher.h""
");
            
            #line default
            #line hidden
            
            #line 18 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 foreach (var unrealComponent in unrealComponents) { 
            
            #line default
            #line hidden
            
            #line 19 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("#include \"");
            
            #line default
            #line hidden
            
            #line 19 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 19 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("AddComponentOp.h\"\r\n");
            
            #line default
            #line hidden
            
            #line 20 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 21 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(@"
/**
*
*/

DECLARE_LOG_CATEGORY_EXTERN(LogEntityPipeline, Log, All);
DEFINE_LOG_CATEGORY(LogEntityPipeline);

UEntityPipeline::UEntityPipeline()
: FirstBlock(nullptr)
, LastBlock(nullptr)
, CallbackDispatcher(nullptr)
, bInitialised(false)
{
}

void UEntityPipeline::Init(const TWeakPtr<SpatialOSView>& InView, UCallbackDispatcher* InCallbackDispatcher)
{
	checkf(!bInitialised, TEXT(""Attempting to call Init more than once!""));
	checkf(FirstBlock, TEXT(""Trying to bind callbacks but no blocks have been added!""));

	Callbacks.Init(InView);
	CallbackDispatcher = InCallbackDispatcher;
	CallbackDispatcher->OnAuthorityChangeOpReceived.AddUObject(this, &UEntityPipeline::OnAuthorityChange);

	auto LockedView = InView.Pin();
	if (LockedView.IsValid())
	{
		Callbacks.Add(LockedView->OnAddEntity(
			std::bind(&UEntityPipeline::OnAddEntity, this, std::placeholders::_1)));

		Callbacks.Add(LockedView->OnRemoveEntity(
			std::bind(&UEntityPipeline::OnRemoveEntity, this, std::placeholders::_1)));

");
            
            #line default
            #line hidden
            
            #line 55 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 foreach (var unrealComponent in unrealComponents) { 
            
            #line default
            #line hidden
            
            #line 56 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("\t\tCallbacks.Add(LockedView->OnAddComponent<");
            
            #line default
            #line hidden
            
            #line 56 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.UnderlyingQualifiedName ));
            
            #line default
            #line hidden
            
            #line 56 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(">(\r\n\t\t\tstd::bind(&UEntityPipeline::Add");
            
            #line default
            #line hidden
            
            #line 57 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 57 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("ComponentOp, this, std::placeholders::_1)));\r\n");
            
            #line default
            #line hidden
            
            #line 58 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 59 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 60 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 foreach (var unrealComponent in unrealComponents) { 
            
            #line default
            #line hidden
            
            #line 61 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("\t\tCallbacks.Add(LockedView->OnRemoveComponent<");
            
            #line default
            #line hidden
            
            #line 61 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.UnderlyingQualifiedName ));
            
            #line default
            #line hidden
            
            #line 61 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(">(\r\n\t\t\tstd::bind(&UEntityPipeline::Remove");
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("ComponentOp, this, std::placeholders::_1)));\r\n");
            
            #line default
            #line hidden
            
            #line 63 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 64 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(@"
	}
	bInitialised = true;
}

void UEntityPipeline::DeregisterAllCallbacks()
{
	if (CallbackDispatcher != nullptr)
	{
		CallbackDispatcher->Reset();
		CallbackDispatcher = nullptr;
	}
	Callbacks.Reset();
	bInitialised = false;
}

void UEntityPipeline::AddBlock(UEntityPipelineBlock* NewBlock)
{
    checkf(!bInitialised, TEXT(""Cannot add blocks after the pipeline has started""));

    if(FirstBlock == nullptr)
	{
		FirstBlock = NewBlock;
	}
	if(LastBlock != nullptr)
	{
		LastBlock->NextBlock = NewBlock;
	}
	LastBlock = NewBlock;
}

void UEntityPipeline::ProcessOps(const TWeakPtr<SpatialOSView>& InView, const TWeakPtr<SpatialOSConnection>& InConnection, UWorld* World)
{
	auto Block = FirstBlock;

	while (Block != nullptr)
	{
		Block->ProcessOps(InView, InConnection, World, CallbackDispatcher);
		Block = Block->NextBlock;
	}
}

");
            
            #line default
            #line hidden
            
            #line 106 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 foreach (var unrealComponent in unrealComponents) { 
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("void UEntityPipeline::Add");
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("ComponentOp(const worker::AddComponentOp<");
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.UnderlyingQualifiedName ));
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(">& Op) {\r\n\tU");
            
            #line default
            #line hidden
            
            #line 108 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 108 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("AddComponentOp* NewOp = NewObject<U");
            
            #line default
            #line hidden
            
            #line 108 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 108 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("AddComponentOp>();\r\n\tif (NewOp)\r\n\t{\r\n\t\tNewOp->Data = Op.Data;\r\n\t\tNewOp->Component" +
                    "Id = ");
            
            #line default
            #line hidden
            
            #line 112 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.UnderlyingQualifiedName ));
            
            #line default
            #line hidden
            
            #line 112 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("::ComponentId;\r\n\t\tNewOp->EntityId = Op.EntityId;\r\n\r\n\t\tFirstBlock->AddComponent(Ne" +
                    "wOp);\r\n\t}\r\n}\r\n\r\nvoid UEntityPipeline::Remove");
            
            #line default
            #line hidden
            
            #line 119 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 119 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("ComponentOp(const worker::RemoveComponentOp& Op) {\r\n\tconst worker::ComponentId Co" +
                    "mponentId = ");
            
            #line default
            #line hidden
            
            #line 120 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( unrealComponent.UnderlyingQualifiedName ));
            
            #line default
            #line hidden
            
            #line 120 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
            this.Write("::ComponentId;\r\n\tFirstBlock->RemoveComponent(ComponentId, Op);\r\n}\r\n");
            
            #line default
            #line hidden
            
            #line 123 "Templates\UnrealEntityPipelineImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class UnrealEntityPipelineImplementationGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
