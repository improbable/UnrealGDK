//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Unreal.CodeGeneration {
    using System.Collections.Generic;
    using Improbable.CodeGeneration.Model;
    using Improbable.Unreal.CodeGeneration.SchemaProcessing.TypeReferences;
    using System;
    using Improbable.CodeGeneration.Jobs;
    
    
    public partial class UnrealCommanderHeaderGenerator : UnrealCommanderHeaderGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 5 "Templates\UnrealCommanderHeaderGenerator.tt"



            
            #line default
            #line hidden
            
            #line 8 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("// ===========\r\n// DO NOT EDIT - this file is automatically regenerated.\r\n// ====" +
                    "======= \r\n\r\n#pragma once\r\n\r\n#include \"CoreMinimal.h\"\r\n#include \"UObject/NoExport" +
                    "Types.h\"\r\n#include \"ScopedViewCallbacks.h\"\r\n");
            
            #line default
            #line hidden
            
            #line 17 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var packageInclude in packageIncludes) { 
            
            #line default
            #line hidden
            
            #line 18 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("#include \"");
            
            #line default
            #line hidden
            
            #line 18 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( packageInclude ));
            
            #line default
            #line hidden
            
            #line 18 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("\"\r\n");
            
            #line default
            #line hidden
            
            #line 19 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 20 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(@"#include ""EntityId.h""
#include ""RequestId.h""
#include ""ComponentId.h""
#include ""CommanderTypes.h""
#include ""EntityTemplate.h""
#include ""EntityQueryConstraints.h""
#include ""EntityQueryCommandResult.h""
#include ""SpatialOSCommandResult.h""
#include ""SpatialOsComponent.h""
#include ""SpatialOSViewTypes.h""
#include ""SpatialOSWorkerTypes.h""

#include ""Commander.generated.h""

class USpatialOsComponent;
");
            
            #line default
            #line hidden
            
            #line 35 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var responseTypeName in responseTypeNames) { 
            
            #line default
            #line hidden
            
            #line 36 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("class ");
            
            #line default
            #line hidden
            
            #line 36 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( responseTypeName ));
            
            #line default
            #line hidden
            
            #line 36 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(";\r\n");
            
            #line default
            #line hidden
            
            #line 37 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 38 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(@"
DECLARE_DYNAMIC_DELEGATE_TwoParams(FReserveEntityIdResultDelegate, const FSpatialOSCommandResult&, result, FEntityId, reservedEntityId);
DECLARE_DYNAMIC_DELEGATE_TwoParams(FReserveEntityIdsResultDelegate, const FSpatialOSCommandResult&, result, const TArray<FEntityId>&, reservedEntityIds);
DECLARE_DYNAMIC_DELEGATE_TwoParams(FCreateEntityResultDelegate, const FSpatialOSCommandResult&, result, FEntityId, createdEntityId);
DECLARE_DYNAMIC_DELEGATE_OneParam(FDeleteEntityResultDelegate, const FSpatialOSCommandResult&, result);
DECLARE_DYNAMIC_DELEGATE_OneParam(FEntityQueryCountResultDelegate, UEntityQueryCountCommandResult*, result);
DECLARE_DYNAMIC_DELEGATE_OneParam(FEntityQuerySnapshotResultDelegate, UEntityQuerySnapshotCommandResult*, result);
");
            
            #line default
            #line hidden
            
            #line 45 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 46 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("DECLARE_DYNAMIC_DELEGATE_TwoParams(F");
            
            #line default
            #line hidden
            
            #line 46 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 46 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("CommandResultDelegate, const FSpatialOSCommandResult&, result, ");
            
            #line default
            #line hidden
            
            #line 46 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.UnrealType ));
            
            #line default
            #line hidden
            
            #line 46 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(", response);\t\r\n");
            
            #line default
            #line hidden
            
            #line 47 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 48 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("\r\n/**\r\n*\r\n*/\r\nUCLASS(BlueprintType)\r\nclass SPATIALOS_API UCommander : public UObj" +
                    "ect\r\n{\r\n\tGENERATED_BODY()\r\n\r\npublic:\r\n\tUCommander();\r\n\r\n\tUCommander* Init(USpati" +
                    "alOsComponent* component, const TWeakPtr<SpatialOSConnection>& InConnection, con" +
                    "st TWeakPtr<SpatialOSView>& InView);\r\n\r\n\tvirtual void BeginDestroy() override;\r\n" +
                    "\t\t\r\n\tUFUNCTION(BlueprintCallable, Category = \"SpatialOS Commands\")\r\n\tFRequestId " +
                    "ReserveEntityId(const FReserveEntityIdResultDelegate& callback, int timeoutMs);\r" +
                    "\n\r\n\tUFUNCTION(BlueprintCallable, Category = \"SpatialOS Commands\")\r\n\tFRequestId R" +
                    "eserveEntityIds(int NumEntitiesToReserve, const FReserveEntityIdsResultDelegate&" +
                    " callback, int timeoutMs);\r\n\t    \r\n\tUFUNCTION(BlueprintCallable, Category = \"Spa" +
                    "tialOS Commands\")\r\n\tFRequestId CreateEntity(UEntityTemplate* entityTemplate, FEn" +
                    "tityId entityId, const FCreateEntityResultDelegate& callback, int timeoutMs);\r\n\t" +
                    "    \r\n\tUFUNCTION(BlueprintCallable, Category = \"SpatialOS Commands\")\r\n\tFRequestI" +
                    "d DeleteEntity(FEntityId entityId, const FDeleteEntityResultDelegate& callback, " +
                    "int timeoutMs);\r\n\r\n\tUFUNCTION(BlueprintCallable, Category = \"Commands\") \r\n\tFRequ" +
                    "estId EntityQueryCountRequest(UEntityQueryConstraint* EntityQuery, const FEntity" +
                    "QueryCountResultDelegate& callback, int timeoutMs);\r\n\r\n\tUFUNCTION(BlueprintCalla" +
                    "ble, Category = \"Commands\", meta = (AutoCreateRefTerm = \"ComponentIds\"))\r\n\tFRequ" +
                    "estId EntityQuerySnapshotRequest(UEntityQueryConstraint* EntityQuery, const TArr" +
                    "ay<FComponentId>& ComponentIds, const FEntityQuerySnapshotResultDelegate& callba" +
                    "ck, int timeoutMs);\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 82 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 83 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("\tUFUNCTION(BlueprintCallable, Category = \"SpatialOS Commands\")\r\n\tFRequestId ");
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("(FEntityId entityId, ");
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealRequestTypeDetails.UnrealType ));
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(" request, const F");
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 84 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("CommandResultDelegate& callback, int timeoutMs, ECommandDelivery commandDelivery " +
                    "= ECommandDelivery::ROUNDTRIP);\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 86 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 87 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(@"	static ECommandResponseCode GetCommandResponseCode(const worker::StatusCode UnderlyingStatusCode);

private:
	TWeakPtr<SpatialOSConnection> Connection;
	TWeakPtr<SpatialOSView> View;

	UPROPERTY()
	USpatialOsComponent* Component;

	UPROPERTY()
	UEntityQueryCountCommandResult* EntityQueryCountCommandResult;

	UPROPERTY()
	UEntityQuerySnapshotCommandResult* EntityQuerySnapshotCommandResult;

");
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 103 "Templates\UnrealCommanderHeaderGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 104 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("\tUPROPERTY()\r\n\t");
            
            #line default
            #line hidden
            
            #line 105 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.UnrealType ));
            
            #line default
            #line hidden
            
            #line 105 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 105 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 105 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("Response;\r\n");
            
            #line default
            #line hidden
            
            #line 106 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 107 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 108 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(@"
	TUniquePtr<improbable::unreal::callbacks::FScopedViewCallbacks> Callbacks;

	TMap<uint32_t, const FReserveEntityIdResultDelegate> RequestIdToReserveEntityIdCallback;
	void OnReserveEntityIdResponseDispatcherCallback(const worker::ReserveEntityIdResponseOp& op);

	TMap<uint32_t, const FReserveEntityIdsResultDelegate> RequestIdToReserveEntityIdsCallback;
	void OnReserveEntityIdsResponseDispatcherCallback(const worker::ReserveEntityIdsResponseOp& op);

    TMap<uint32_t, const FCreateEntityResultDelegate> RequestIdToCreateEntityCallback;
	void OnCreateEntityResponseDispatcherCallback(const worker::CreateEntityResponseOp& op);

    TMap<uint32_t, const FDeleteEntityResultDelegate> RequestIdToDeleteEntityCallback;
	void OnDeleteEntityResponseDispatcherCallback(const worker::DeleteEntityResponseOp& op);

	TMap<uint32_t, FEntityQueryCountResultDelegate> RequestIdToEntityQueryCountCommandCallback;
	TMap<uint32_t, FEntityQuerySnapshotResultDelegate> RequestIdToEntityQuerySnapshotCommandCallback;
	void OnEntityQueryCommandResponseDispatcherCallback(const worker::EntityQueryResponseOp& op);

");
            
            #line default
            #line hidden
            
            #line 127 "Templates\UnrealCommanderHeaderGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 128 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("\tTMap<uint32_t, const F");
            
            #line default
            #line hidden
            
            #line 128 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 128 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("CommandResultDelegate> RequestIdTo");
            
            #line default
            #line hidden
            
            #line 128 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 128 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("CommandCallback;\r\n\tvoid On");
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("CommandResponseDispatcherCallback(const worker::CommandResponseOp<");
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.QualifiedOwnerName ));
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("::Commands::");
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnderlyingCapitalisedName ));
            
            #line default
            #line hidden
            
            #line 129 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write(">& op);\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 131 "Templates\UnrealCommanderHeaderGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 132 "Templates\UnrealCommanderHeaderGenerator.tt"
            this.Write("};\r\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class UnrealCommanderHeaderGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
