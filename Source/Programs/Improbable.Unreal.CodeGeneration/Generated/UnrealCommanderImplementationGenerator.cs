//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Improbable.Unreal.CodeGeneration {
    using System.Collections.Generic;
    using System.Linq;
    using Improbable.CodeGeneration.Model;
    using Improbable.Unreal.CodeGeneration.SchemaProcessing.TypeReferences;
    using System;
    using Improbable.CodeGeneration.Jobs;
    
    
    public partial class UnrealCommanderImplementationGenerator : UnrealCommanderImplementationGeneratorBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 6 "Templates\UnrealCommanderImplementationGenerator.tt"



            
            #line default
            #line hidden
            
            #line 9 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("// ===========\r\n// DO NOT EDIT - this file is automatically regenerated.\r\n// ====" +
                    "======= \r\n#include \"Commander.h\"\r\n#include \"RequestId.h\"\r\n");
            
            #line default
            #line hidden
            
            #line 14 "Templates\UnrealCommanderImplementationGenerator.tt"
var requiredResponseIncludes = commandDetailsList
									.SelectMany(commandDetail => { return commandDetail.UnrealResponseTypeDetails.RequiredIncludes; })
									.Where(include => include != null)
									.Distinct();

foreach (var requiredResponseInclude in requiredResponseIncludes) { 
            
            #line default
            #line hidden
            
            #line 20 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("#include ");
            
            #line default
            #line hidden
            
            #line 20 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requiredResponseInclude ));
            
            #line default
            #line hidden
            
            #line 20 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 21 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 22 "Templates\UnrealCommanderImplementationGenerator.tt"
var requiredRequestIncludes = commandDetailsList
									.SelectMany(commandDetail => { return commandDetail.UnrealRequestTypeDetails.RequiredIncludes; })
									.Where(include => include != null)
									.Distinct();

foreach (var requiredRequestInclude in requiredRequestIncludes) { 
            
            #line default
            #line hidden
            
            #line 28 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("#include ");
            
            #line default
            #line hidden
            
            #line 28 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( requiredRequestInclude ));
            
            #line default
            #line hidden
            
            #line 28 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 29 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 30 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(@"#include ""SpatialOSCommandResult.h""
#include ""SpatialOsComponent.h""
#include ""SpatialOSViewTypes.h""
#include ""SpatialOSWorkerTypes.h""

ECommandResponseCode UCommander::GetCommandResponseCode(const worker::StatusCode UnderlyingStatusCode)
{
	switch (UnderlyingStatusCode)
	{
		case worker::StatusCode::kSuccess:
			return ECommandResponseCode::Success;
		case worker::StatusCode::kTimeout:
			return ECommandResponseCode::Timeout;
		case worker::StatusCode::kNotFound:
			return ECommandResponseCode::NotFound;
		case worker::StatusCode::kAuthorityLost:
			return ECommandResponseCode::AuthorityLost;
		case worker::StatusCode::kPermissionDenied:
			return ECommandResponseCode::PermissionDenied;
		case worker::StatusCode::kApplicationError:
			return ECommandResponseCode::ApplicationError;
		default:
			return ECommandResponseCode::Unknown;
	}	
}

UCommander::UCommander()
: Component(nullptr)
, EntityQueryCountCommandResult(nullptr)
, EntityQuerySnapshotCommandResult(nullptr)
");
            
            #line default
            #line hidden
            
            #line 60 "Templates\UnrealCommanderImplementationGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 61 "Templates\UnrealCommanderImplementationGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(", ");
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("Response(");
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.DefaultValue ));
            
            #line default
            #line hidden
            
            #line 62 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(")\r\n");
            
            #line default
            #line hidden
            
            #line 63 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 64 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 65 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("{\r\n}\r\n\r\nUCommander* UCommander::Init(USpatialOsComponent* InComponent, const TWea" +
                    "kPtr<SpatialOSConnection>& InConnection, const TWeakPtr<SpatialOSView>& InView)\r" +
                    "\n{\r\n\tConnection = InConnection;\r\n\tView = InView;\r\n\tComponent = InComponent;\r\n\t\t\r" +
                    "\n");
            
            #line default
            #line hidden
            
            #line 74 "Templates\UnrealCommanderImplementationGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 75 "Templates\UnrealCommanderImplementationGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\t");
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("Response = NewObject<");
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.UClassName ));
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(">(this, ");
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.UClassName ));
            
            #line default
            #line hidden
            
            #line 76 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("::StaticClass());\r\n");
            
            #line default
            #line hidden
            
            #line 77 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 78 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 79 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(@"
	auto LockedView = View.Pin();

	if(LockedView.IsValid())
	{
		Callbacks.Reset(new improbable::unreal::callbacks::FScopedViewCallbacks(View));

		Callbacks->Add(LockedView->OnReserveEntityIdResponse(std::bind(
			&UCommander::OnReserveEntityIdResponseDispatcherCallback, this, std::placeholders::_1)));

		Callbacks->Add(LockedView->OnReserveEntityIdsResponse(std::bind(
			&UCommander::OnReserveEntityIdsResponseDispatcherCallback, this, std::placeholders::_1)));

		Callbacks->Add(LockedView->OnCreateEntityResponse(std::bind(
			&UCommander::OnCreateEntityResponseDispatcherCallback, this, std::placeholders::_1)));

		Callbacks->Add(LockedView->OnDeleteEntityResponse(std::bind(
			&UCommander::OnDeleteEntityResponseDispatcherCallback, this, std::placeholders::_1)));

		Callbacks->Add(LockedView->OnEntityQueryResponse(std::bind(
			&UCommander::OnEntityQueryCommandResponseDispatcherCallback, this, std::placeholders::_1)));

		");
            
            #line default
            #line hidden
            
            #line 101 "Templates\UnrealCommanderImplementationGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\t\tCallbacks->Add(LockedView->OnCommandResponse<");
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.QualifiedOwnerName ));
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("::Commands::");
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnderlyingCapitalisedName ));
            
            #line default
            #line hidden
            
            #line 102 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(">(std::bind(\r\n\t\t\t&UCommander::On");
            
            #line default
            #line hidden
            
            #line 103 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 103 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandResponseDispatcherCallback, this, std::placeholders::_1)));\r\n\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 105 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 106 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\t\r\n\t}\r\n\r\n\treturn this;\r\n}\r\n\r\nvoid UCommander::BeginDestroy()\r\n{\r\n\tSuper::BeginDes" +
                    "troy();\r\n\r\n\tCallbacks.Reset(nullptr);\r\n}\r\n\r\nFRequestId UCommander::ReserveEntity" +
                    "Id(const FReserveEntityIdResultDelegate& callback, int timeoutMs)\r\n{\r\n\tFRequestI" +
                    "d WrappedRequestId;\r\n\tif (Component != nullptr && Component->GetAuthority() != E" +
                    "Authority::Authoritative && Component->GetAuthority() != EAuthority::AuthorityLo" +
                    "ssImminent)\r\n\t{\r\n\t\tFSpatialOSCommandResult CommandResult;\r\n\t\tCommandResult.Statu" +
                    "sCode = ECommandResponseCode::PermissionDenied;\r\n\t\tCommandResult.ErrorMessage = " +
                    "FString(\"Tried to reserve an entity id from a component you do not have authorit" +
                    "y on.\");\r\n\t\tcallback.ExecuteIfBound(CommandResult, 0);\r\n\t}\r\n\telse {\r\n\t\tauto Lock" +
                    "edConnection = Connection.Pin();\r\n\r\n\t\tif(LockedConnection.IsValid())\r\n\t\t{\r\n\t\t\tau" +
                    "to requestId = LockedConnection->SendReserveEntityIdRequest(timeoutMs);\r\n\t\t\tRequ" +
                    "estIdToReserveEntityIdCallback.Emplace(requestId.Id, callback);\r\n\t\t\tWrappedReque" +
                    "stId = FRequestId(requestId.Id, true);\r\n\t\t}\r\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r" +
                    "\nvoid UCommander::OnReserveEntityIdResponseDispatcherCallback(const worker::Rese" +
                    "rveEntityIdResponseOp& op)\r\n{\r\n\tif (RequestIdToReserveEntityIdCallback.Find(op.R" +
                    "equestId.Id) == nullptr)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tauto callback = RequestIdToReserve" +
                    "EntityIdCallback[op.RequestId.Id];\r\n    FSpatialOSCommandResult CommandResult;\r\n" +
                    "\tCommandResult.StatusCode = GetCommandResponseCode(op.StatusCode);\r\n\tCommandResu" +
                    "lt.ErrorMessage = FString(op.Message.c_str());\r\n\tCommandResult.RequestId = FRequ" +
                    "estId(op.RequestId.Id, true);\r\n\tFEntityId EntityId = FEntityId((op.EntityId.empt" +
                    "y() ? 0 : *(op.EntityId.data())));\r\n\tif (!callback.IsBound())\r\n\t{\r\n\t\tUE_LOG(LogT" +
                    "emp, Warning,\r\n\t\t\tTEXT(\"OnReserveEntityIdResponse callback is no longer bound!\")" +
                    ",\r\n\t\t\t*GetName())\r\n\t}\r\n\tcallback.ExecuteIfBound(CommandResult, EntityId);\r\n\tRequ" +
                    "estIdToReserveEntityIdCallback.Remove(op.RequestId.Id);\r\n}\r\n\r\nFRequestId UComman" +
                    "der::ReserveEntityIds(int NumEntitiesToReserve, const FReserveEntityIdsResultDel" +
                    "egate& callback, int timeoutMs)\r\n{\r\n\tFRequestId WrappedRequestId;\r\n\tif (Componen" +
                    "t != nullptr && Component->GetAuthority() != EAuthority::Authoritative && Compon" +
                    "ent->GetAuthority() != EAuthority::AuthorityLossImminent)\r\n\t{\r\n\t\tTArray<FEntityI" +
                    "d> EmptyResult;\r\n\t\tFSpatialOSCommandResult CommandResult;\r\n\t\tCommandResult.Statu" +
                    "sCode = ECommandResponseCode::PermissionDenied;\r\n\t\tCommandResult.ErrorMessage = " +
                    "FString(\"Tried to reserve entity ids from a component you do not have authority " +
                    "on.\");\r\n\t\tcallback.ExecuteIfBound(CommandResult, EmptyResult);\r\n\t}\r\n\telse \r\n\t{\r\n" +
                    "\t\tauto LockedConnection = Connection.Pin();\r\n\r\n\t\tif (LockedConnection.IsValid())" +
                    "\r\n\t\t{\r\n\t\t\tauto requestId = LockedConnection->SendReserveEntityIdsRequest(NumEnti" +
                    "tiesToReserve, timeoutMs);\r\n\t\t\tRequestIdToReserveEntityIdsCallback.Emplace(reque" +
                    "stId.Id, callback);\r\n\t\t\tWrappedRequestId = FRequestId(requestId.Id, true);\r\n\t\t}\r" +
                    "\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nvoid UCommander::OnReserveEntityIdsResponse" +
                    "DispatcherCallback(const worker::ReserveEntityIdsResponseOp& op)\r\n{\r\n\tauto callb" +
                    "ack = RequestIdToReserveEntityIdsCallback.Find(op.RequestId.Id);\r\n\tif (callback " +
                    "== nullptr)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\r\n\tFSpatialOSCommandResult CommandResult;\r\n\tComm" +
                    "andResult.StatusCode = GetCommandResponseCode(op.StatusCode);\r\n\tCommandResult.Er" +
                    "rorMessage = FString(op.Message.c_str());\r\n\tCommandResult.RequestId = FRequestId" +
                    "(op.RequestId.Id, true);\r\n\tif (!(*callback).IsBound())\r\n\t{\r\n\t\tUE_LOG(LogTemp, Wa" +
                    "rning,\r\n\t\t\tTEXT(\"OnReserveEntityIdsResponse callback is no longer bound!\"),\r\n\t\t\t" +
                    "*GetName())\r\n\t}\r\n\telse \r\n\t{\r\n\t\tTArray<FEntityId> ReservedEntityIds;\r\n\t\tif (Comma" +
                    "ndResult.StatusCode == ECommandResponseCode::Success && !op.FirstEntityId.empty(" +
                    "))\r\n\t\t{\r\n\t\t\tconst auto FirstEntityId = *(op.FirstEntityId.data());\r\n\t\t\tfor (auto" +
                    " i = 0; i < op.NumberOfEntityIds; ++i)\r\n\t\t\t{\r\n\t\t\t\tReservedEntityIds.Emplace(FEnt" +
                    "ityId(FirstEntityId + i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t(*callback).ExecuteIfBound(CommandRes" +
                    "ult, ReservedEntityIds);\r\n\t}\r\n\r\n\tRequestIdToReserveEntityIdsCallback.Remove(op.R" +
                    "equestId.Id);\r\n}\r\n\r\nFRequestId UCommander::CreateEntity(UEntityTemplate* entityT" +
                    "emplate, FEntityId entityId, const FCreateEntityResultDelegate& callback, int ti" +
                    "meoutMs)\r\n{\r\n\tFRequestId WrappedRequestId;\r\n\tif (Component != nullptr && Compone" +
                    "nt->GetAuthority() != EAuthority::Authoritative && Component->GetAuthority() != " +
                    "EAuthority::AuthorityLossImminent)\r\n\t{\r\n\t\tFSpatialOSCommandResult CommandResult;" +
                    "\r\n\t\tCommandResult.StatusCode = ECommandResponseCode::PermissionDenied;\r\n\t\tComman" +
                    "dResult.ErrorMessage = FString(\"Tried to create an entity from a component you d" +
                    "o not have authority on.\");\r\n\r\n\t\tcallback.ExecuteIfBound(CommandResult, 0);\r\n\t}\r" +
                    "\n\telse\r\n\t{\r\n\t\tauto LockedConnection = Connection.Pin();\r\n\r\n\t\tif(LockedConnection" +
                    ".IsValid())\r\n\t\t{\r\n\t\t\tauto requestId = LockedConnection->SendCreateEntityRequest(" +
                    "entityTemplate->GetUnderlying(), worker::Option<worker::EntityId>(entityId.ToSpa" +
                    "tialEntityId()), timeoutMs);\r\n\t\t\tRequestIdToCreateEntityCallback.Emplace(request" +
                    "Id.Id, callback);\r\n\t\t\tWrappedRequestId = FRequestId(requestId.Id, true);\r\n\t\t}\r\n\t" +
                    "}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nvoid UCommander::OnCreateEntityResponseDispat" +
                    "cherCallback(const worker::CreateEntityResponseOp& op)\r\n{\r\n\tif (RequestIdToCreat" +
                    "eEntityCallback.Find(op.RequestId.Id) == nullptr)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tauto call" +
                    "back = RequestIdToCreateEntityCallback[op.RequestId.Id];\r\n    FSpatialOSCommandR" +
                    "esult CommandResult;\r\n\tCommandResult.StatusCode = GetCommandResponseCode(op.Stat" +
                    "usCode);\r\n\tCommandResult.ErrorMessage = FString(op.Message.c_str());\r\n\tCommandRe" +
                    "sult.RequestId = FRequestId(op.RequestId.Id, true);\r\n\tFEntityId EntityId = FEnti" +
                    "tyId((op.EntityId.empty() ? 0 : *(op.EntityId.data())));\r\n\tif (!callback.IsBound" +
                    "())\r\n\t{\r\n\t\tUE_LOG(LogTemp, Warning,\r\n\t\t\tTEXT(\"OnCreateEntityResponse callback is" +
                    " no longer bound!\"),\r\n\t\t\t*GetName())\r\n\t}\r\n\tcallback.ExecuteIfBound(CommandResult" +
                    ", EntityId);\r\n\tRequestIdToCreateEntityCallback.Remove(op.RequestId.Id);\r\n}\r\n\r\nFR" +
                    "equestId UCommander::DeleteEntity(FEntityId entityId, const FDeleteEntityResultD" +
                    "elegate& callback, int timeoutMs)\r\n{\r\n\tFRequestId WrappedRequestId;\r\n\tif (Compon" +
                    "ent != nullptr && Component->GetAuthority() != EAuthority::Authoritative && Comp" +
                    "onent->GetAuthority() != EAuthority::AuthorityLossImminent)\r\n\t{\r\n\t\tFSpatialOSCom" +
                    "mandResult CommandResult;\r\n\t\tCommandResult.StatusCode = ECommandResponseCode::Pe" +
                    "rmissionDenied;\r\n\t\tCommandResult.ErrorMessage = FString(\"Tried to delete an enti" +
                    "ty from a component you do not have authority on.\");\r\n\r\n\t\tcallback.ExecuteIfBoun" +
                    "d(CommandResult);\r\n\t}\r\n\telse \r\n\t{\r\n\t\tauto LockedConnection = Connection.Pin();\r\n" +
                    "\r\n\t\tif(LockedConnection.IsValid())\r\n\t\t{\r\n\t\t\tauto requestId = LockedConnection->S" +
                    "endDeleteEntityRequest(entityId.ToSpatialEntityId(), timeoutMs);\r\n\t\t\tRequestIdTo" +
                    "DeleteEntityCallback.Emplace(requestId.Id, callback);\r\n\t\t\tWrappedRequestId = FRe" +
                    "questId(requestId.Id, true);\r\n\t\t}\r\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nvoid UCom" +
                    "mander::OnDeleteEntityResponseDispatcherCallback(const worker::DeleteEntityRespo" +
                    "nseOp& op)\r\n{\r\n\tif (RequestIdToDeleteEntityCallback.Find(op.RequestId.Id) == nul" +
                    "lptr)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tauto callback = RequestIdToDeleteEntityCallback[op.Re" +
                    "questId.Id];\r\n    FSpatialOSCommandResult CommandResult;\r\n\tCommandResult.StatusC" +
                    "ode = GetCommandResponseCode(op.StatusCode);\r\n\tCommandResult.ErrorMessage = FStr" +
                    "ing(op.Message.c_str());\r\n\tCommandResult.RequestId = FRequestId(op.RequestId.Id," +
                    " true);\r\n\tif (!callback.IsBound())\r\n\t{\r\n\t\tUE_LOG(LogTemp, Warning,\r\n\t\t\tTEXT(\"OnD" +
                    "eleteEntityResponse callback is no longer bound!\"),\r\n\t\t\t*GetName())\r\n\t}\r\n\tcallba" +
                    "ck.ExecuteIfBound(CommandResult);\r\n\tRequestIdToDeleteEntityCallback.Remove(op.Re" +
                    "questId.Id);\r\n}\r\n\r\nFRequestId UCommander::EntityQueryCountRequest(UEntityQueryCo" +
                    "nstraint* EntityQuery, const FEntityQueryCountResultDelegate& callback, int time" +
                    "outMs)\r\n{\r\n\tFRequestId WrappedRequestId;\r\n\tauto lockedConnection = Connection.Pi" +
                    "n();\r\n\tif (lockedConnection.IsValid())\r\n\t{\r\n\t\tworker::query::EntityQuery query{ " +
                    "*(EntityQuery->Underlying), worker::query::CountResultType{} };\r\n\t\tauto queryId " +
                    "= lockedConnection->SendEntityQueryRequest(query, timeoutMs);\r\n\t\tRequestIdToEnti" +
                    "tyQueryCountCommandCallback.Emplace(queryId.Id, callback);\r\n\t\tWrappedRequestId =" +
                    " FRequestId(queryId.Id, true);\r\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nFRequestId U" +
                    "Commander::EntityQuerySnapshotRequest(UEntityQueryConstraint* EntityQuery, const" +
                    " TArray<FComponentId>& ComponentIds, const FEntityQuerySnapshotResultDelegate& c" +
                    "allback, int timeoutMs)\r\n{\r\n\tFRequestId WrappedRequestId;\r\n\tauto lockedConnectio" +
                    "n = Connection.Pin();\r\n\tif (lockedConnection.IsValid())\r\n\t{\r\n\t\tworker::query::Sn" +
                    "apshotResultType snapshotType{};\r\n\t\tif (ComponentIds.Num() > 0)\r\n\t\t{\r\n\t\t\tworker:" +
                    ":List<worker::ComponentId> componentIdList;\r\n\t\t\tfor (const FComponentId& id : Co" +
                    "mponentIds)\r\n\t\t\t{\r\n\t\t\t\tcomponentIdList.emplace_back(id.ToSpatialComponentId());\r" +
                    "\n\t\t\t}\r\n\t\t\tsnapshotType.ComponentIds = componentIdList;\r\n\t\t}\r\n\r\n\t\tworker::query::" +
                    "EntityQuery query{ *(EntityQuery->Underlying), snapshotType };\r\n\t\tauto queryId =" +
                    " lockedConnection->SendEntityQueryRequest(query, timeoutMs);\r\n\t\tRequestIdToEntit" +
                    "yQuerySnapshotCommandCallback.Emplace(queryId.Id, callback);\r\n\t\tWrappedRequestId" +
                    " = FRequestId(queryId.Id, true);\r\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nvoid UComm" +
                    "ander::OnEntityQueryCommandResponseDispatcherCallback(const worker::EntityQueryR" +
                    "esponseOp& op)\r\n{\r\n\tauto countCallback = RequestIdToEntityQueryCountCommandCallb" +
                    "ack.Find(op.RequestId.Id);\r\n\tauto snapshotCallback = RequestIdToEntityQuerySnaps" +
                    "hotCommandCallback.Find(op.RequestId.Id);\r\n\tif (countCallback != nullptr)\r\n\t{\r\n\t" +
                    "\tif (EntityQueryCountCommandResult == nullptr)\r\n\t\t{\r\n\t\t\tEntityQueryCountCommandR" +
                    "esult = NewObject<UEntityQueryCountCommandResult>(this, UEntityQueryCountCommand" +
                    "Result::StaticClass());\r\n\t\t}\r\n\t\tEntityQueryCountCommandResult->Init(op);\r\n\r\n\t\tif" +
                    " (!(*countCallback).IsBound())\r\n\t\t{\r\n\t\t\tUE_LOG(LogTemp, Warning,\r\n\t\t\t\tTEXT(\"OnEn" +
                    "tityQueryCommandResponse callback is no longer bound!\"),\r\n\t\t\t\t*GetName())\r\n\t\t}\r\n" +
                    "\t\t(*countCallback).ExecuteIfBound(EntityQueryCountCommandResult);\r\n\t\tRequestIdTo" +
                    "EntityQueryCountCommandCallback.Remove(op.RequestId.Id);\r\n\t}\r\n\telse if (snapshot" +
                    "Callback != nullptr)\r\n\t{\r\n\t\tif (EntityQuerySnapshotCommandResult == nullptr)\r\n\t\t" +
                    "{\r\n\t\t\tEntityQuerySnapshotCommandResult = NewObject<UEntityQuerySnapshotCommandRe" +
                    "sult>(this, UEntityQuerySnapshotCommandResult::StaticClass());\r\n\t\t}\r\n\t\tEntityQue" +
                    "rySnapshotCommandResult->Init(op);\r\n\r\n\t\tif (!(*snapshotCallback).IsBound())\r\n\t\t{" +
                    "\r\n\t\t\tUE_LOG(LogTemp, Warning,\r\n\t\t\t\tTEXT(\"OnEntityQueryCommandResponse callback i" +
                    "s no longer bound!\"),\r\n\t\t\t\t*GetName())\r\n\t\t}\r\n\t\t(*snapshotCallback).ExecuteIfBoun" +
                    "d(EntityQuerySnapshotCommandResult);\r\n\t\tRequestIdToEntityQuerySnapshotCommandCal" +
                    "lback.Remove(op.RequestId.Id);\r\n\t}\r\n}\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 397 "Templates\UnrealCommanderImplementationGenerator.tt"
 foreach (var commandDetails in commandDetailsList) { 
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("FRequestId UCommander::");
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("(FEntityId entityId, ");
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealRequestTypeDetails.UnrealType ));
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(" request, const F");
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 398 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(@"CommandResultDelegate& callback, int timeoutMs, ECommandDelivery commandDelivery)
{	
	FRequestId WrappedRequestId;
	if (Component != nullptr && Component->GetAuthority() != EAuthority::Authoritative && Component->GetAuthority() != EAuthority::AuthorityLossImminent)
	{
		FSpatialOSCommandResult CommandResult;
		CommandResult.StatusCode = ECommandResponseCode::PermissionDenied;
		CommandResult.ErrorMessage = FString(""Error sending command: Tried to send a ");
            
            #line default
            #line hidden
            
            #line 405 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 405 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(" command from a component which the worker does not have authority on.\");\r\n\t\t\t\t\r\n" +
                    "\t\tcallback.ExecuteIfBound(CommandResult, ");
            
            #line default
            #line hidden
            
            #line 407 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.DefaultValue ));
            
            #line default
            #line hidden
            
            #line 407 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(@");
	}
	else
	{
		auto LockedConnection = Connection.Pin();

		if(LockedConnection.IsValid())
		{
			worker::CommandParameters parameters;
			parameters.AllowShortCircuit = (commandDelivery == ECommandDelivery::SHORT_CIRCUIT);
			auto underlyingRequest = ");
            
            #line default
            #line hidden
            
            #line 417 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealRequestTypeDetails.ConvertUnrealValueToUnderlyingValue("request") ));
            
            #line default
            #line hidden
            
            #line 417 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(";\r\n\t\t\tauto requestId = LockedConnection->SendCommandRequest<");
            
            #line default
            #line hidden
            
            #line 418 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.QualifiedOwnerName ));
            
            #line default
            #line hidden
            
            #line 418 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("::Commands::");
            
            #line default
            #line hidden
            
            #line 418 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnderlyingCapitalisedName ));
            
            #line default
            #line hidden
            
            #line 418 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(">(entityId.ToSpatialEntityId(), underlyingRequest, worker::Option<std::uint32_t>(" +
                    "timeoutMs), parameters);\r\n\t\t\tRequestIdTo");
            
            #line default
            #line hidden
            
            #line 419 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 419 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandCallback.Emplace(requestId.Id, callback);\r\n\t\t\tWrappedRequestId = FRequestI" +
                    "d(requestId.Id, true);\r\n\t\t}\r\n\t}\r\n\treturn WrappedRequestId;\r\n}\r\n\r\nvoid UCommander" +
                    "::On");
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandResponseDispatcherCallback(const worker::CommandResponseOp<");
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.QualifiedOwnerName ));
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("::Commands::");
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnderlyingCapitalisedName ));
            
            #line default
            #line hidden
            
            #line 426 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(">& op)\r\n{\r\n");
            
            #line default
            #line hidden
            
            #line 428 "Templates\UnrealCommanderImplementationGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 429 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tcheck(");
            
            #line default
            #line hidden
            
            #line 429 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 429 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("Response);\r\n");
            
            #line default
            #line hidden
            
            #line 430 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 431 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tauto callback = RequestIdTo");
            
            #line default
            #line hidden
            
            #line 431 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 431 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandCallback.Find(op.RequestId.Id);\r\n\tif (callback == nullptr)\r\n\t{\r\n\t\treturn;\r" +
                    "\n\t}\r\n\r\n\tif (!callback->IsBound())\r\n\t{\r\n\t\tUE_LOG(LogTemp, Warning,\r\n\t\t\tTEXT(\"On");
            
            #line default
            #line hidden
            
            #line 440 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 440 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandResponse callback is no longer bound!\"),\r\n\t\t\t*GetName())\r\n\r\n\t\tRequestIdTo");
            
            #line default
            #line hidden
            
            #line 443 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 443 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(@"CommandCallback.Remove(op.RequestId.Id);
		return;
	}

	FSpatialOSCommandResult CommandResult;
	CommandResult.StatusCode = GetCommandResponseCode(op.StatusCode);
	CommandResult.ErrorMessage = FString(op.Message.c_str());
	CommandResult.RequestId = FRequestId(op.RequestId.Id, true);

");
            
            #line default
            #line hidden
            
            #line 452 "Templates\UnrealCommanderImplementationGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 453 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tif (CommandResult.StatusCode == ECommandResponseCode::Success && !op.Response.em" +
                    "pty())\r\n\t{\r\n\t\t");
            
            #line default
            #line hidden
            
            #line 455 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 455 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("Response->Init(*(op.Response.data()));\r\n\t}\r\n");
            
            #line default
            #line hidden
            
            #line 457 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 458 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\r\n");
            
            #line default
            #line hidden
            
            #line 459 "Templates\UnrealCommanderImplementationGenerator.tt"
 if (commandDetails.UnrealResponseTypeDetails.ReferenceType == ReferenceType.UserType) { 
            
            #line default
            #line hidden
            
            #line 460 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tcallback->ExecuteIfBound(CommandResult, CommandResult.StatusCode == ECommandResp" +
                    "onseCode::Success ? ");
            
            #line default
            #line hidden
            
            #line 460 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 460 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("Response : ");
            
            #line default
            #line hidden
            
            #line 460 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.DefaultValue ));
            
            #line default
            #line hidden
            
            #line 460 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(");\r\n");
            
            #line default
            #line hidden
            
            #line 461 "Templates\UnrealCommanderImplementationGenerator.tt"
 } else { 
            
            #line default
            #line hidden
            
            #line 462 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tcallback->ExecuteIfBound(CommandResult, CommandResult.StatusCode == ECommandResp" +
                    "onseCode::Success ? ");
            
            #line default
            #line hidden
            
            #line 462 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(commandDetails.UnrealResponseTypeDetails.ConvertUnderlyingValueToUnrealMemberVariable("(*(op.Response.data()))") ));
            
            #line default
            #line hidden
            
            #line 462 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(" : ");
            
            #line default
            #line hidden
            
            #line 462 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.UnrealResponseTypeDetails.DefaultValue ));
            
            #line default
            #line hidden
            
            #line 462 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(");\r\n");
            
            #line default
            #line hidden
            
            #line 463 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 464 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("\tRequestIdTo");
            
            #line default
            #line hidden
            
            #line 464 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture( commandDetails.CapitalisedName ));
            
            #line default
            #line hidden
            
            #line 464 "Templates\UnrealCommanderImplementationGenerator.tt"
            this.Write("CommandCallback.Remove(op.RequestId.Id);\r\n}\r\n\r\n");
            
            #line default
            #line hidden
            
            #line 467 "Templates\UnrealCommanderImplementationGenerator.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class UnrealCommanderImplementationGeneratorBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
